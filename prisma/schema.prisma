// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BookStatusEnum {
  AVAILABLE
  UNAVAILABLE
}

enum UserRoleEnum {
  USER
  ADMIN
}

model Book {
  id        Int             @id @default(autoincrement())
  title     String
  isbn      String          @unique
  status    BookStatusEnum?
  image     String?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  author    String
  borrows   Borrow[]
}

model Borrow {
  id     Int       @id @default(autoincrement())
  from   DateTime?
  to     DateTime?
  user   User      @relation(fields: [userId], references: [id])
  book   Book      @relation(fields: [bookId], references: [id])
  userId String
  bookId Int
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  phone         String?
  password      String
  role          String?
  borrows       Borrow[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
